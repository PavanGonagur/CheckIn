@model CheckIn.Web.Models.Channel.WebClip.WebClipEditModel

<div class="modal-header">
<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
<h4 class="modal-title" id="myModalLabel">Web Clips</h4>
</div>

<div class="modal-body">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ChannelId)
            @Html.HiddenFor(model => model.WebClipId)

            <div class="form-group">
                @Html.LabelFor(model => model.OpenInBrowser, htmlAttributes: new {@class = "control-label col-md-4"})
                <div class="col-md-1"></div>
                <div class="col-md-6">
                    <div class="material-switch">
                        <input class="form-control check-box" data-val="true" data-val-required="The OpenInBrowser field is required." id="OpenInBrowser" name="OpenInBrowser" type="checkbox" value="true">
                        <label for="OpenInBrowser" class="label-success"></label>
                    </div>
                    @Html.ValidationMessageFor(model => model.OpenInBrowser, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.WebClipName, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.WebClipName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.WebClipName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.WebClipUrl, htmlAttributes: new {@class = "control-label col-md-4"})
                <div class="col-md-7">
                    @Html.EditorFor(model => model.WebClipUrl, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.WebClipUrl, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IconUrl, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.IconUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IconUrl, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="modal-footer">
                @*<div class="col-md-10">*@
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="submit" id="approve-btn" class="btn btn-danger">Save</button>
                @*</div>*@
            </div>
        </div>
    }
</div>
<script type="text/javascript">
    $(function () {
        if ('@Model.OpenInBrowser' == 'True') {
            $("input#OpenInBrowser").prop('checked', true);
        }
        $.validator.unobtrusive.parse($("form"));
        $('.approve-btn').click(function () {
            $('#modal-container').modal('hide');
        });
    });
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}